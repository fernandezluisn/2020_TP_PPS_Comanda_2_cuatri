{"version":3,"sources":["webpack:///./src/app/paginas/hacer-pedido/hacer-pedido.module.ts","webpack:///./src/app/paginas/hacer-pedido/hacer-pedido.page.html","webpack:///./src/app/paginas/hacer-pedido/hacer-pedido.page.scss","webpack:///./src/app/paginas/hacer-pedido/hacer-pedido.page.ts"],"names":[],"mappings":"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","file":"paginas-hacer-pedido-hacer-pedido-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HacerPedidoPage } from './hacer-pedido.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HacerPedidoPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HacerPedidoPage]\n})\nexport class HacerPedidoPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Hacer Pedido</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ng-container *ngIf=\\\"esMozo\\\">\\n    <ion-item><ion-label>Seleccione Nro de Mesa:</ion-label></ion-item>\\n    <ion-select [(ngModel)]=\\\"pedido['id_mesa_cliente']\\\" placeholder=\\\"Seleccione Nro Mesa\\\">\\n      <ng-container *ngFor=\\\"let m of mesasClientes\\\">\\n        <ion-select-option value=\\\"{{m.id}}\\\" *ngIf=\\\"!m.cerrada\\\">{{m.qr}}</ion-select-option>\\n      </ng-container>\\n    </ion-select>\\n  </ng-container>  \\n  <ng-container *ngIf=\\\"pedidosProductos.length > 0\\\">\\n    <ion-item><ion-label>Pedido Actual:</ion-label></ion-item>\\n    <table style=\\\"width: 100%; border: 2px solid red; text-align: center;\\\">\\n      <thead><th>Producto</th><th>Precio</th> <th>Cantidad</th> <th>Borrar</th></thead>\\n      <tbody>\\n        <ng-container *ngFor=\\\"let prod of pedidosProductos\\\">\\n          <tr>\\n            <ng-container *ngFor=\\\"let p of productos\\\">\\n              <ng-container *ngIf=\\\"p.id == prod.id_producto\\\">\\n                <td>{{p.nombre}}</td>\\n                <td>{{p.precio}}</td>\\n                <td>{{prod.cantidad}}</td>\\n              </ng-container>              \\n            </ng-container>     \\n            <td><ion-button color=\\\"danger\\\" (click)=\\\"BorrarProducto(prod.id_producto)\\\" shape=\\\"round\\\">X</ion-button></td>       \\n          </tr>\\n        </ng-container>        \\n      </tbody>\\n    </table>\\n  </ng-container>  \\n  <ion-list *ngFor=\\\"let item of productos\\\">\\n    <div style=\\\"width:100%;\\\">\\n      <ion-item><h2>{{item.nombre}}</h2></ion-item>\\n      <ion-item>{{item.descripcion}}</ion-item>\\n      <div style=\\\"height: 100px; text-align: center;\\\">\\n        <img src=\\\"{{item.foto_1}}\\\" style=\\\"width: 100px; height: 100px;\\\">\\n        <img src=\\\"{{item.foto_2}}\\\" style=\\\"width: 100px; height: 100px;\\\">\\n        <img src=\\\"{{item.foto_3}}\\\" style=\\\"width: 100px; height: 100px;\\\">\\n      </div>\\n      <br>\\n      <ion-item>Precio: ${{item.precio}}.00</ion-item>\\n      <ion-item>\\n          Cantidad: &nbsp;<input type=\\\"number\\\" min=\\\"1\\\" [(ngModel)]=\\\"cantidad\\\" style=\\\"width: 30px;\\\">\\n        <ion-button color=\\\"danger\\\" (click)=\\\"Agregar(item)\\\" slot=\\\"end\\\">Agregar a Pedido</ion-button>\\n      </ion-item>\\n    </div>\\n  </ion-list>\\n</ion-content>\\n<ion-footer>\\n  <ion-button (click)=\\\"LeerQR()\\\" color='dark' expand=\\\"full\\\">Seleccionar por QR</ion-button>\\n  <ion-button (click)=\\\"TerminarPedido()\\\" color='dark' expand=\\\"full\\\">Terminar Pedido</ion-button>\\n</ion-footer>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYXMvaGFjZXItcGVkaWRvL2hhY2VyLXBlZGlkby5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductosService } from 'src/app/servicios/productos.service';\r\nimport { Producto } from 'src/app/interfaces/producto';\r\nimport { Pedido } from 'src/app/interfaces/pedido';\r\nimport { PedidoProducto } from 'src/app/interfaces/pedido';\r\nimport { PedidosService } from 'src/app/servicios/pedidos.service';\r\nimport { MesasService } from 'src/app/servicios/mesas.service';\r\nimport { AuthService } from 'src/app/servicios/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\r\nimport { AlertService } from 'src/app/servicios/alert.service';\r\n\r\nimport { Platform,AlertController, PopoverController } from '@ionic/angular';\r\nimport { ConsultaMozoPage } from '../consulta-mozo/consulta-mozo.page';\r\nimport { SpinnerService } from 'src/app/servicios/spinner.service';\r\nimport { ConsultaService } from 'src/app/servicios/consulta.service';\r\nimport { Consulta } from 'src/app/interfaces/Consulta';\r\nimport { FcmService } from 'src/app/servicios/fcm.service';\r\nimport { MesaClienteService } from 'src/app/servicios/mesa-cliente.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-hacer-pedido',\r\n  templateUrl: './hacer-pedido.page.html',\r\n  styleUrls: ['./hacer-pedido.page.scss'],\r\n})\r\nexport class HacerPedidoPage implements OnInit {\r\n  public productos: Producto[];\r\n  public cantidad: number;\r\n  direccion:any=false;\r\n  public pedido = {\r\n    comienzo: (new Date()).toString(),\r\n    estado: 'sconfirmar',\r\n    id_mesa_cliente: '',\r\n    'id-mesa': '',\r\n    delivery:false,\r\n    direccion:'',\r\n    foto:'',\r\n    email:'',\r\n    Mesa: ''\r\n  };\r\n  public pedidosProductos = [];\r\n  public mesasClientes = [];\r\n  private idUsusario = '';\r\n  private usuario;\r\n  public esMozo: boolean;\r\n  esCliente:boolean;\r\n  constructor(private platform: Platform,private prodServ: ProductosService, private pedidoServ: PedidosService,\r\n    private mesaServ: MesasService, private authServ: AuthService,\r\n    private MesaClienteService: MesaClienteService,\r\n    private router: Router, private barcodeScanner: BarcodeScanner, \r\n    private alertServ: AlertService,private popoverCtrl: PopoverController, private spinnerService: SpinnerService,\r\n    private consultaService: ConsultaService, private fcmService: FcmService)    \r\n    {\r\n    this.prodServ.devolverListadoProductos().subscribe( (data) => {\r\n      this.productos = data;\r\n      // console.log(data);\r\n    });\r\n    this.cantidad = 1;\r\n  }\r\n  async ngOnInit() {\r\n    this.spinnerService.showSpinner();\r\n    this.idUsusario = this.authServ.getUsuario()['id'];\r\n    this.usuario = this.authServ.getUsuario();\r\n    this.pedido.foto = this.usuario['foto'];\r\n    this.pedido.email = this.usuario['mail'];\r\n    this.MesaClienteService.getMesas().subscribe( (data) => {\r\n      this.mesasClientes = data;\r\n      if (this.usuario.perfil != 'cliente' && this.usuario.perfil != 'anonimo') {\r\n        this.esMozo = true;\r\n      } else {\r\n        this.esMozo = false;\r\n        this.esCliente = this.usuario.perfil == 'cliente';\r\n\r\n        for (const item of this.mesasClientes) {\r\n          if (item.idCliente === this.idUsusario && !item.cerrada) {\r\n            this.pedido.id_mesa_cliente = item.id;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      this.spinnerService.hideSpinner();\r\n\r\n    });\r\n  }\r\n\r\n  public Agregar(producto: Producto) {\r\n    if (this.cantidad > 0 ) {\r\n        const pedidoProd = {\r\n          id_pedido: this.pedido['id'],\r\n          estado: 'sconfirmar',\r\n          id_comanda: '',\r\n          cantidad: this.cantidad,\r\n          nombreProducto: producto.nombre,\r\n          tipoProducto: producto.tipo\r\n        };\r\n        this.pedidosProductos.push(pedidoProd);\r\n        this.alertServ.mensaje(''+this.cantidad+' productos','agregados')\r\n    }\r\n    console.log(this.pedidosProductos)\r\n    this.cantidad = 1;\r\n  }\r\n\r\n  public async TerminarPedido(delivery:boolean=false) {\r\n\r\n    if (this.pedidosProductos.length > 0) {\r\n      // console.log(this.pedido.id_mesa_cliente);\r\n      if ((!this.esMozo) || this.pedido.id_mesa_cliente != '' ) {\r\n        this.mesasClientes.forEach(mCliente => {\r\n          if (mCliente.id == this.pedido.id_mesa_cliente) {\r\n            this.pedido['id-mesa'] = mCliente.idMesa;\r\n\r\n            \r\n            this.MesaClienteService.getMesaPorID(mCliente.idMesa).then(mesas => {\r\n              mesas[0].estado = 'esperando pedido';\r\n              this.pedido.Mesa = mesas[0].qrMesa;\r\n              this.MesaClienteService.actualizarMesa(mesas[0]);\r\n            });\r\n          }\r\n        });\r\n        this.pedidoServ.AddPedido(this.pedido).then( (res) => {\r\n          this.pedido['id'] = res['id'];\r\n          // console.log(this.pedido);\r\n          for (const item of this.pedidosProductos) {\r\n            item.id_pedido = res['id'];\r\n            this.pedidoServ.AddPedidoProducto(item).then( (res) => {\r\n              console.log('agregado');\r\n            });\r\n          }\r\n          this.alertServ.mensaje('', 'El pedido se agregó correctamente');\r\n          if ( this.usuario.perfil == 'cliente' || this.usuario.perfil == 'anonimo') {\r\n         \r\n            this.avisarPedidoMozo(this.pedido.id_mesa_cliente);\r\n\r\n            this.router.navigate(['/mesa-cliente']);\r\n          } else {\r\n            this.router.navigate(['/mozo-aceptar']);\r\n          }\r\n        });\r\n      } else {\r\n        this.alertServ.mensaje('Alerta:', 'Faltan datos para generar el pedido');\r\n      }\r\n    }\r\n\r\n  }\r\n  async avisarPedidoMozo(mesa:string)\r\n  {\r\n    \r\n          this.fcmService.enviarMensaje(\"Nuevo Pedido\", 'Nuevo Pedido en Mesa'+mesa, \"mozo\")\r\n \r\n      }\r\n\r\n  public BorrarProducto(idProducto: string) {\r\n    console.log(this.pedidosProductos);\r\n    for (const pp of this.pedidosProductos) {\r\n      if (pp.id_producto == idProducto) {\r\n        const index = this.pedidosProductos.indexOf(pp);\r\n        this.pedidosProductos.splice(index, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  public LeerQR() {\r\n    //MICA agrega lo de poner la cantidad\r\n    this.barcodeScanner.scan().then(resultado => {\r\n      this.productos.forEach(producto => {\r\n        if (producto.qr == resultado.text) {\r\n          this.Agregar(producto);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}"],"sourceRoot":""}
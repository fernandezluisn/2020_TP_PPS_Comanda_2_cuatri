{"version":3,"sources":["webpack:///./src/app/paginas/home-metre/home-metre.module.ts","webpack:///./src/app/paginas/home-metre/home-metre.page.html","webpack:///./src/app/paginas/home-metre/home-metre.page.scss","webpack:///./src/app/paginas/home-metre/home-metre.page.ts"],"names":[],"mappings":"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","file":"paginas-home-metre-home-metre-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { HomeMetrePage } from './home-metre.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeMetrePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [HomeMetrePage]\r\n})\r\nexport class HomeMetrePageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>METRE</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding color=\\\"dark\\\"> \\r\\n\\r\\n  <br>\\r\\n  <ion-list-header lines=\\\"inset\\\" color=\\\"dark\\\">\\r\\n    <ion-label>LISTA DE ESPERA</ion-label>\\r\\n  </ion-list-header>\\r\\n<div *ngFor=\\\"let cliente of this.clientesEnEspera\\\">\\r\\n  <ion-item color=\\\"dark\\\">\\r\\n    <ion-label style=\\\"color:black\\\" >{{cliente.nombre}} {{cliente.apellido}}</ion-label>\\r\\n    <ion-button fill=\\\"outline\\\" (click)=\\\"aceptarCliente(cliente)\\\">ACEPTAR</ion-button>\\r\\n  </ion-item>\\r\\n</div>\\r\\n<div *ngIf=\\\"clientesEnEspera.length === 0\\\">\\r\\n  <ion-item color=\\\"dark\\\">\\r\\n    <ion-label >Sin clientes en espera</ion-label>\\r\\n  </ion-item>\\r\\n</div>\\r\\n\\r\\n<ion-button class=\\\"apagar\\\" color=\\\"dark\\\" (click)=\\\"salir()\\\">\\r\\n  <ion-icon name=\\\"power\\\"></ion-icon>\\r\\n</ion-button>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n<ion-footer>\\r\\n  <ion-toolbar>\\r\\n    <ion-button color='dark' expand=\\\"full\\\" (click)='this.AltaCliente()' >Alta Cliente</ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-footer>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYXMvaG9tZS1tZXRyZS9ob21lLW1ldHJlLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ReservasService } from 'src/app/servicios/reservas.service';\r\nimport { AuthService } from 'src/app/servicios/auth.service';\r\nimport { AlertService } from 'src/app/servicios/alert.service';\r\nimport { FcmService } from 'src/app/servicios/fcm.service';\r\n\r\n@Component({\r\n  selector: 'app-home-metre',\r\n  templateUrl: './home-metre.page.html',\r\n  styleUrls: ['./home-metre.page.scss'],\r\n})\r\nexport class HomeMetrePage implements OnInit {\r\n\r\n  clientesEnEspera = [];\r\n  clientes;\r\n  cantClientesEnEspera = 100;\r\n  constructor(private reservasService: ReservasService, private authService: AuthService, private route:Router,\r\n     private alertService: AlertService, private fcmService: FcmService) {\r\n       this.fcmService.SuscribirANotificacion('notificacionListaEspera')\r\n    this.clientesEnEspera = [];\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    //Obtengo los clientes en estado lista de espera y asigno la cantidad total en la variable \"cantClientesEnEspera\" para poder darme cuenta cuando hay un cliente nuevo\r\n    this.authService.getUsuariosListaEspera().subscribe(usuarios=>{\r\n      this.clientesEnEspera = [];\r\n      console.log(usuarios);\r\n      usuarios.forEach(cliente => {\r\n        if( cliente.estado === \"EnListaDeEspera\" ) {\r\n          this.clientesEnEspera.push(cliente);\r\n      }\r\n    });\r\n    if ( this.clientesEnEspera.length > this.cantClientesEnEspera ) {\r\n      //TODO -> PUSH NOTIFICATION\r\n     this.alertService.mensaje(\"\", \"Nuevo Cliente\");\r\n    }\r\n    this.cantClientesEnEspera = this.clientesEnEspera.length;\r\n     console.log(this.clientesEnEspera);\r\n    })\r\n  }\r\n\r\n  Eliminar(id){\r\n    this.reservasService.EliminarListaEspera(id);\r\n  }\r\n  \r\n  aceptarCliente(cliente){\r\n    cliente.estado = \"aceptado\";\r\n    this.authService.ModificarUsuario(cliente);\r\n  }\r\n\r\n  AltaCliente(){\r\n    this.route.navigate(['alta-cliente'])\r\n  }\r\n\r\n  salir(){\r\n    this.authService.LogOut();\r\n    this.route.navigate(['log-in']);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}
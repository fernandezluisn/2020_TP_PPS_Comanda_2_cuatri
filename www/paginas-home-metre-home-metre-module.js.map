{"version":3,"sources":["webpack:///./src/app/paginas/home-metre/home-metre.module.ts","webpack:///./src/app/paginas/home-metre/home-metre.page.html","webpack:///./src/app/paginas/home-metre/home-metre.page.scss","webpack:///./src/app/paginas/home-metre/home-metre.page.ts","webpack:///./src/app/servicios/reservas.service.ts"],"names":[],"mappings":"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","file":"paginas-home-metre-home-metre-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { HomeMetrePage } from './home-metre.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeMetrePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [HomeMetrePage]\r\n})\r\nexport class HomeMetrePageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>METRE</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding color=\\\"dark\\\"> \\r\\n\\r\\n  <br>\\r\\n  <ion-list-header lines=\\\"inset\\\" color=\\\"dark\\\">\\r\\n    <ion-label>LISTA DE ESPERA</ion-label>\\r\\n  </ion-list-header>\\r\\n<div *ngFor=\\\"let cliente of this.clientesEnEspera\\\">\\r\\n  <ion-item color=\\\"dark\\\">\\r\\n    <ion-label style=\\\"color:black\\\" >{{cliente.nombre}} {{cliente.apellido}}</ion-label>\\r\\n    <ion-button fill=\\\"outline\\\" (click)=\\\"aceptarCliente(cliente)\\\">ACEPTAR</ion-button>\\r\\n  </ion-item>\\r\\n</div>\\r\\n<div *ngIf=\\\"clientesEnEspera.length === 0\\\">\\r\\n  <ion-item color=\\\"dark\\\">\\r\\n    <ion-label >Sin clientes en espera</ion-label>\\r\\n  </ion-item>\\r\\n</div>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n<ion-footer>\\r\\n  <ion-toolbar>\\r\\n    <ion-button color='dark' expand=\\\"full\\\" (click)='this.AltaCliente()' >Alta Cliente</ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-footer>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYXMvaG9tZS1tZXRyZS9ob21lLW1ldHJlLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ReservasService } from 'src/app/servicios/reservas.service';\r\nimport { AuthService } from 'src/app/servicios/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home-metre',\r\n  templateUrl: './home-metre.page.html',\r\n  styleUrls: ['./home-metre.page.scss'],\r\n})\r\nexport class HomeMetrePage implements OnInit {\r\n\r\n  clientesEnEspera = [];\r\n  clientes;\r\n  cantClientesEnEspera = 100;\r\n  constructor(private reservasService: ReservasService, private authService: AuthService, private route:Router) {\r\n    this.clientesEnEspera = [];\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    //Obtengo los clientes en estado lista de espera y asigno la cantidad total en la variable \"cantClientesEnEspera\" para poder darme cuenta cuando hay un cliente nuevo\r\n    this.authService.getUsuariosListaEspera().subscribe(usuarios=>{\r\n      this.clientesEnEspera = [];\r\n      console.log(usuarios);\r\n      usuarios.forEach(cliente => {\r\n        if( cliente.estado === \"EnListaDeEspera\" ) {\r\n          this.clientesEnEspera.push(cliente);\r\n      }\r\n    });\r\n    if ( this.clientesEnEspera.length > this.cantClientesEnEspera ) {\r\n      //TODO -> PUSH NOTIFICATION\r\n     alert(\"nuevoCliente\");\r\n    }\r\n    this.cantClientesEnEspera = this.clientesEnEspera.length;\r\n     console.log(this.clientesEnEspera);\r\n    })\r\n  }\r\n\r\n  Eliminar(id){\r\n    this.reservasService.EliminarListaEspera(id);\r\n  }\r\n  \r\n  aceptarCliente(cliente){\r\n    cliente.estado = \"aceptado\";\r\n    this.authService.ModificarUsuario(cliente);\r\n  }\r\n\r\n  AltaCliente(){\r\n    this.route.navigate(['alta-cliente'])\r\n  }\r\n\r\n}\r\n","import { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Injectable } from '@angular/core';\r\nimport { Reserva, Espera } from '../interfaces/reserva';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReservasService {\r\n\r\n  constructor(private db: AngularFirestore, private authService:AuthService) { }\r\n\r\n  getReservas() {\r\n    return this.db.collection('reservas').snapshotChanges().pipe(map(reservas => {\r\n      return reservas.map(reserva => {\r\n        const data = reserva.payload.doc.data() as Reserva;\r\n        data.id = reserva.payload.doc.id;\r\n        return data;\r\n      });\r\n    }));\r\n  }\r\n\r\n  getReservasPendientes() {\r\n    return this.db.collection('reservas', ref => ref.where('estado', '==', 'pendiente')).snapshotChanges().pipe(map(reservas => {\r\n      return reservas.map(reserva => {\r\n        const data = reserva.payload.doc.data() as Reserva;\r\n        data.id = reserva.payload.doc.id;\r\n        return data;\r\n      });\r\n    }));\r\n  }\r\n\r\n  addReserva(reserva: Reserva) {\r\n    return new Promise((resolve, rejected) => {\r\n      this.db.collection('reservas').add(reserva).then(ret => {\r\n        resolve(ret);\r\n      }).catch(err => {\r\n        rejected(err);\r\n      });\r\n    });\r\n  }\r\n\r\n  updateReserva(reserva: Reserva) {\r\n    return this.db.collection('reservas').doc(reserva.id).set(reserva);\r\n  }\r\n\r\n  entrarListaEspera(cantidad) {\r\n    let usr = this.authService.getUsuario();\r\n    let id = usr['id'];\r\n    let nombre =usr['nombre'];\r\n    const fecha = new Date();\r\n    const anio = fecha.getFullYear().toString();\r\n    const mes = fecha.getMonth().toString();\r\n    const dia = fecha.getDate().toString();\r\n    const hora = fecha.getHours().toString();\r\n    const minuto = fecha.getMinutes().toString();\r\n\r\n    this.db.collection('lista-espera').add({\r\n      nombre: nombre,\r\n      ingreso: anio + '-' + mes + '-' + dia + ' ' + hora + ':' + minuto,\r\n      cliente: id,\r\n      cantidad: cantidad\r\n    }).then(ret => { console.log(ret); }).catch(err => { console.log(err); });\r\n  }\r\n\r\n  getListaEspera() {\r\n    return this.db.collection('lista-espera').snapshotChanges().pipe(map(esperas => {\r\n      return esperas.map(espera => {\r\n        const data = espera.payload.doc.data() as Espera;\r\n        data.id = espera.payload.doc.id;\r\n        return data;\r\n      });\r\n    }));\r\n  }\r\n\r\n  EliminarListaEspera(id) {\r\n    this.db.doc('lista-espera/' + id).delete().then(ret => { console.log(ret); });\r\n  }\r\n\r\n  EliminarDeListaEsperaByIdCliente(idCliente: string, listaEspera: Espera[]) {\r\n    listaEspera.map(espera => {\r\n      if (espera.cliente === idCliente) {\r\n        this.db.doc('lista-espera/' + espera.id).delete();\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}
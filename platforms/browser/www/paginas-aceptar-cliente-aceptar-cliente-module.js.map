{"version":3,"sources":["webpack:///./src/app/paginas/aceptar-cliente/aceptar-cliente.module.ts","webpack:///./src/app/paginas/aceptar-cliente/aceptar-cliente.page.html","webpack:///./src/app/paginas/aceptar-cliente/aceptar-cliente.page.scss","webpack:///./src/app/paginas/aceptar-cliente/aceptar-cliente.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEe;AAE5D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAkB;KAC9B;CACF,CAAC;AAWF;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QATpC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,wEAAkB,CAAC;SACnC,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBrC,g7C;;;;;;;;;;;ACAA,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;ACAb;AACqC;AAE1D;AACgC;AACE;AACtB;AAOzC;IAEE,4BAAqB,YAAwB,EAAS,aAA4B,EAAU,KAAkB,EAAU,KAAY,EAAU,IAAgB;QAAzI,iBAAY,GAAZ,YAAY,CAAY;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAU,UAAK,GAAL,KAAK,CAAa;QAAU,UAAK,GAAL,KAAK,CAAO;QAAU,SAAI,GAAJ,IAAI,CAAY;QAD9J,aAAQ,GAAO,EAAE,CAAC;IAC+I,CAAC;IAElK,qCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,kBAAQ;YACnD,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC5B,kDAAkD;YACnD,IAAI;YACF,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACvB,CAAC,CAAC;IAEJ,CAAC;IAED,0CAAa,GAAb;QAAA,iBASC;QARC,IAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,EAAC;YAC1C,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,kBAAQ;gBAChD,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,kDAAK,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAK,KAAI,CAAC,aAAa,EAAE,CAAC,EAAC,CAAC;YACrD,CAAC,CAAC;SACH;IAEH,CAAC;IAED,2CAAc,GAAd,UAAe,OAAO;QACpB,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,EAAE;IAEjB,CAAC;IAED,8CAAiB,GAAjB,UAAkB,OAAe;QAC/B,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAC,SAAkB;YACvD,IAAI,SAAS,EAAE;gBACb,yBAAyB;aAE1B;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,EAAC,EAAE,CAAC;QACzC,IAAI,KAAK,GAAwB;YAC/B,EAAE,EAAE,OAAO,CAAC,IAAI;YAChB,EAAE,EAAE,EAAE;YACN,GAAG,EAAE,EAAE;YACP,WAAW,EAAE,EACZ;YACD,OAAO,EAAE,qCAAqC;YAC9C,IAAI,EAAE,uEAAuE;YAC7E,MAAM,EAAE,IAAI;SACb;QAED,4CAA4C;QAC5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,aAAG,IAAM,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAM,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEvG,CAAC;IAED,iDAAoB,GAApB,UAAqB,OAAe;QAClC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAC,SAAkB;YACvD,IAAI,SAAS,EAAE;gBACb,yBAAyB;aAE1B;QACH,CAAC,CAAC,CAAC;QACH,IAAI,KAAK,GAAwB;YAC/B,EAAE,EAAE,OAAO,CAAC,IAAI;YAChB,EAAE,EAAE,EAAE;YACN,GAAG,EAAE,EAAE;YACP,WAAW,EAAE,EACZ;YACD,OAAO,EAAE,wCAAwC;YACjD,IAAI,EAAE,6DAA6D;YACnE,MAAM,EAAE,IAAI;SACb;QAED,4CAA4C;QAC5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,aAAG,IAAM,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAM,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEvG,CAAC;IAED,0CAAa,GAAb,UAAc,OAAO;QACnB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,EAAC,EAAE,CAAC;QACxC,IAAI,CAAC,QAAQ,EAAE;QACf,gDAAgD;IAClD,CAAC;IAED,kCAAK,GAAL;QACE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClC,CAAC;IA1FU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,+HAA0C;;SAE3C,CAAC;+EAGkC,0EAAW,EAAwB,8EAAa,EAAgB,4EAAY,EAAgB,sDAAM,EAAe,0EAAW;OAFnJ,kBAAkB,CA4F9B;IAAD,yBAAC;CAAA;AA5F8B","file":"paginas-aceptar-cliente-aceptar-cliente-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AceptarClientePage } from './aceptar-cliente.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AceptarClientePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [AceptarClientePage]\r\n})\r\nexport class AceptarClientePageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color='dark'>\\r\\n    <ion-title text-center>Clientes a Aceptar</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n\\r\\n  <ion-slides style=\\\"height: 100%\\\" scrollbar='true' pager=\\\"true\\\" [options]=\\\"slideOpts\\\">\\r\\n    <ion-slide style=\\\"height: 100%\\\" *ngFor=\\\"let cliente of this.clientes\\\">\\r\\n      <ion-content>\\r\\n        <ion-item>\\r\\n          <ion-label>Nombre:</ion-label>\\r\\n          <ion-input class='input_blanco' type=\\\"text\\\" [(ngModel)]=\\\"cliente.nombre\\\"></ion-input>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label>DNI:</ion-label>\\r\\n          <ion-input class='input_blanco' type=\\\"text\\\" [(ngModel)]=\\\"cliente.dni\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-img [src]=\\\"cliente.foto\\\"></ion-img>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-button class=\\\"apagar\\\" color=\\\"dark\\\" (click)=\\\"salir()\\\">\\r\\n          <ion-icon name=\\\"power\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n\\r\\n        <ion-footer>\\r\\n          <ion-toolbar>\\r\\n            <ion-button color='danger' class=\\\"mitad\\\" (click)='this.BorrarCliente(cliente)'>Cancelar</ion-button>\\r\\n            <ion-button color='success' class=\\\"mitad\\\" (click)='this.AceptarCliente(cliente)'>Aceptar Cliente</ion-button>\\r\\n          </ion-toolbar>\\r\\n        </ion-footer>\\r\\n      </ion-content>\\r\\n    </ion-slide>\\r\\n  </ion-slides>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYXMvYWNlcHRhci1jbGllbnRlL2FjZXB0YXItY2xpZW50ZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { EmailComposerOptions, EmailComposer } from '@ionic-native/email-composer/ngx';\r\nimport { Cliente } from 'src/app/interfaces/usuario';\r\nimport { timer } from 'rxjs';\r\nimport { AuthService } from 'src/app/servicios/auth.service';\r\nimport { AlertService } from 'src/app/servicios/alert.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-aceptar-cliente',\r\n  templateUrl: './aceptar-cliente.page.html',\r\n  styleUrls: ['./aceptar-cliente.page.scss'],\r\n})\r\nexport class AceptarClientePage implements OnInit {\r\n  clientes: any= [];\r\n  constructor( private clienteServe:AuthService,private emailComposer: EmailComposer, private alert:AlertService, private route:Router, private auth:AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.clienteServe.GetUsuariosPorAceptar().then(clientes=>{\r\n        this.clientes = clientes;\r\n     //timer(3000).subscribe(()=>{this.TomarUsuarios();\r\n    //})\r\n      console.log(clientes)\r\n    })\r\n\r\n  }\r\n\r\n  TomarUsuarios() {\r\n    if(this.clienteServe.getUsuario()['perfil']){\r\n      this.clienteServe.GetUsuariosAceptar().then(clientes=>{\r\n          this.clientes = clientes;\r\n        console.log(clientes)\r\n        timer(10000).subscribe(()=>{this.TomarUsuarios();})\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  AceptarCliente(cliente){\r\n    cliente.activo = true;\r\n    this.clienteServe.ModificarUsuario(cliente);\r\n    this.SendAcceptedEmail(cliente);\r\n    this.ngOnInit()\r\n\r\n  }\r\n\r\n  SendAcceptedEmail(cliente:Cliente) {\r\n    this.emailComposer.isAvailable().then((available: boolean) => {\r\n      if (available) {\r\n        //Now we know we can send\r\n\r\n      }\r\n    });\r\n    this.alert.mensaje(\"Cliente Aceptado\",\"\")\r\n    let email:EmailComposerOptions = {\r\n      to: cliente.mail,\r\n      cc: '',\r\n      bcc: [],\r\n      attachments: [\r\n      ],\r\n      subject: 'Comanda: Tu cuenta ha sido aceptada',\r\n      body: 'Por favor accede a nuestra aplicacion para poder ingresar a tu cuenta',\r\n      isHtml: true\r\n    }\r\n\r\n    // Send a text message using default options\r\n    this.emailComposer.open(email).then(ret => { console.log(ret) }).catch(err => { console.log(err); });\r\n\r\n  }\r\n\r\n  SendNotAcceptedEmail(cliente:Cliente) {\r\n    this.emailComposer.isAvailable().then((available: boolean) => {\r\n      if (available) {\r\n        //Now we know we can send\r\n\r\n      }\r\n    });\r\n    let email:EmailComposerOptions = {\r\n      to: cliente.mail,\r\n      cc: '',\r\n      bcc: [],\r\n      attachments: [\r\n      ],\r\n      subject: 'Comanda: Tu cuenta no ha sido aceptada',\r\n      body: 'Usted no ha sido aceptado para ser cliente del restaurante.',\r\n      isHtml: true\r\n    }\r\n\r\n    // Send a text message using default options\r\n    this.emailComposer.open(email).then(ret => { console.log(ret) }).catch(err => { console.log(err); });\r\n\r\n  }\r\n\r\n  BorrarCliente(cliente){\r\n    this.clienteServe.BorrarUsuario(cliente)\r\n    this.alert.mensaje(\"Cliente Borrado\",\"\")\r\n    this.ngOnInit()\r\n    // console.log(this.clientes.findIndex(cliente))\r\n  }\r\n\r\n  salir(){\r\n    this.auth.LogOut();\r\n    this.route.navigate(['log-in']);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/app/interfaces/reserva.ts","webpack:///./src/app/paginas/reservas/reservas.module.ts","webpack:///./src/app/paginas/reservas/reservas.page.html","webpack:///./src/app/paginas/reservas/reservas.page.scss","webpack:///./src/app/paginas/reservas/reservas.page.ts"],"names":[],"mappings":"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","file":"paginas-reservas-reservas-module.js","sourcesContent":["import { Mesa } from './mesa';\r\n\r\nexport class Reserva {\r\n    id: string;\r\n    mesa: Mesa;\r\n    idCliente: string;\r\n    fecha: string;\r\n    fecha2:string;\r\n    estado: string; // 'pendiente', 'confirmada', 'rechazada', 'expirada'\r\n    hora:string;\r\n    nombreCliente:string;\r\n    cantidad:number;\r\n    tipo:string;\r\n    situacion:string;\r\n\r\n    constructor(idCliente:string, fecha:string, hora:string, estado:string, nombreCliente:string, cantidad:number, tipo:string, fecha2:string){\r\n        this.fecha=fecha;\r\n        this.hora=hora;\r\n        this.idCliente=idCliente;\r\n        this.estado=estado;\r\n        this.nombreCliente=nombreCliente;\r\n        this.cantidad=cantidad;\r\n        this.tipo=tipo;\r\n        this.situacion=\"a reservar\";\r\n        this.fecha2=fecha2;\r\n    }\r\n}\r\n\r\nexport interface Espera {\r\n    id:string;\r\n    nombre:string;\r\n    cantidad:string;\r\n    ingreso:string;\r\n    cliente:string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ReservasPage } from './reservas.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReservasPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ReservasPage]\r\n})\r\nexport class ReservasPageModule {}\r\n","module.exports = \"\\r\\n\\r\\n<ion-content>\\r\\n  <ion-img src=\\\"../assets/logo.png\\\"></ion-img>\\r\\n  <ion-item style=\\\"margin-top: 2rem;\\\">\\r\\n    <ion-label>Fecha</ion-label>\\r\\n    <ion-datetime displayFormat=\\\"DD MM YYYY\\\" [min]=\\\"hoy\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"fecha\\\"></ion-datetime>\\r\\n  </ion-item>\\r\\n  <ion-item >\\r\\n    <ion-label>Hora</ion-label>\\r\\n    <ion-datetime displayFormat=\\\"HH:mm\\\" hourValues=\\\"12,13,14,15,20,21,22,23\\\" [(ngModel)]=\\\"hora\\\" minuteValues=\\\"0,15,30,45\\\"></ion-datetime>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-item >\\r\\n    <ion-label position=\\\"floating\\\">Cantidad de personas</ion-label>\\r\\n    <ion-input type=\\\"number\\\" [(ngModel)]=\\\"cantidad\\\"></ion-input>\\r\\n  </ion-item> \\r\\n\\r\\n  <ion-item>\\r\\n    <ion-label position=\\\"floating\\\">Tipo de mesa</ion-label>\\r\\n    <ion-select [(ngModel)]=\\\"tipo\\\">\\r\\n      <ion-select-option>Vip</ion-select-option>\\r\\n      <ion-select-option>Discapacitados</ion-select-option>\\r\\n      <ion-select-option>Estandar</ion-select-option>\\r\\n    </ion-select>\\r\\n  </ion-item>  \\r\\n\\r\\n  <ion-button (click)=\\\"subir()\\\" expand=\\\"full\\\" color=\\\"success\\\">Solicitar reserva</ion-button>\\r\\n\\r\\n  <ion-button class=\\\"apagar\\\" color=\\\"dark\\\" (click)=\\\"salir()\\\">\\r\\n    <ion-icon name=\\\"power\\\"></ion-icon>\\r\\n  </ion-button>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYXMvcmVzZXJ2YXMvcmVzZXJ2YXMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Reserva } from 'src/app/interfaces/reserva';\r\nimport { AlertService } from 'src/app/servicios/alert.service';\r\nimport { ReservasService } from 'src/app/servicios/reservas.service';\r\nimport { ToastService } from 'src/app/servicios/toast.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/servicios/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-reservas',\r\n  templateUrl: './reservas.page.html',\r\n  styleUrls: ['./reservas.page.scss'],\r\n})\r\nexport class ReservasPage implements OnInit {\r\n\r\n  fecha:Date;\r\n  hoy=new Date().toISOString();\r\n  hoy2;\r\n  hora:Date;\r\n  cantidad:number;\r\n  tipo:string;\r\n\r\n  usuario;\r\n\r\n  constructor(public datePipe: DatePipe, private alertar:AlertService, private bda:ReservasService, private toast:ToastService, private route:Router, private auth:AuthService) { \r\n    console.log(this.hoy);\r\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n    this.cantidad=0;\r\n    this.tipo=\"Estandar\";\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  subir(){\r\n    \r\n    let hor=this.datePipe.transform(this.hora, 'HH:mm');;\r\n    let fech=this.datePipe.transform(this.fecha, 'dd/MM/yyyy');\r\n    let nom=this.usuario.nombre+\" \"+this.usuario.apellido;    \r\n    let fech2=this.datePipe.transform(this.fecha, 'yyyy-MM-dd');\r\n    \r\n    if(fech==null && hor==null){\r\n      this.alertar.mensaje(\"Faltan datos\", \"Debe ingresar fecha y hora\");\r\n    }else if(this.usuario.perfil==\"anonimo\"){\r\n      this.alertar.mensaje(\"Usuario anónimo\",\"Debe estar registrado para poder hacer una reserva\");\r\n    }else if(this.cantidad==0){\r\n      this.alertar.mensaje(\"ERROR\",\"Debe solicitar una mesa para una persona o más\");\r\n    }else{\r\n      try{\r\n        let r=new Reserva(this.usuario.id, fech, hor,\"pendiente\", nom, this.cantidad, this.tipo, fech2);\r\n        this.bda.addReserva(r);\r\n        this.toast.confirmationToast(\"Se solicitó la reserva correctamente\");\r\n        this.route.navigate([\"home-cliente\"]);\r\n      }catch(err){\r\n        this.alertar.mensaje(\"ERROR\", err);\r\n      }\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  salir(){\r\n    this.auth.LogOut();\r\n    this.route.navigate(['log-in']);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}
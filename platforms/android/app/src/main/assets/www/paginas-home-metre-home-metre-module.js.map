{"version":3,"sources":["webpack:///./src/app/paginas/home-metre/home-metre.module.ts","webpack:///./src/app/paginas/home-metre/home-metre.page.html","webpack:///./src/app/paginas/home-metre/home-metre.page.scss","webpack:///./src/app/paginas/home-metre/home-metre.page.ts"],"names":[],"mappings":"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","file":"paginas-home-metre-home-metre-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { HomeMetrePage } from './home-metre.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeMetrePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [HomeMetrePage]\r\n})\r\nexport class HomeMetrePageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Metre</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding color=\\\"dark\\\"> \\r\\n\\r\\n  <br>\\r\\n  <ion-list-header lines=\\\"inset\\\" color=\\\"dark\\\">\\r\\n    <ion-label>LISTA DE ESPERA</ion-label>\\r\\n  </ion-list-header>\\r\\n<div *ngFor=\\\"let cliente of this.clientesEnEspera\\\">\\r\\n  <ion-item color=\\\"dark\\\">\\r\\n    <ion-label style=\\\"color:black\\\" >{{cliente.nombre}} {{cliente.apellido}}</ion-label>\\r\\n    <ion-button fill=\\\"outline\\\" (click)=\\\"aceptarCliente(cliente)\\\">ACEPTAR</ion-button>\\r\\n  </ion-item>\\r\\n</div>\\r\\n<div *ngIf=\\\"clientesEnEspera.length === 0\\\">\\r\\n  <ion-item color=\\\"dark\\\">\\r\\n    <ion-label >Sin clientes en lista de espera.</ion-label>\\r\\n  </ion-item>\\r\\n</div>\\r\\n\\r\\n<ion-button class=\\\"apagar\\\" color=\\\"dark\\\" (click)=\\\"salir()\\\">\\r\\n  <ion-icon name=\\\"power\\\"></ion-icon>\\r\\n</ion-button>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n<ion-footer>\\r\\n  <ion-toolbar>\\r\\n    <ion-button color='dark' expand=\\\"full\\\" (click)='this.AltaCliente()' >Alta Cliente</ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-footer>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYXMvaG9tZS1tZXRyZS9ob21lLW1ldHJlLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ReservasService } from 'src/app/servicios/reservas.service';\r\nimport { AuthService } from 'src/app/servicios/auth.service';\r\nimport { AlertService } from 'src/app/servicios/alert.service';\r\nimport { FcmService } from 'src/app/servicios/fcm.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Reserva } from 'src/app/interfaces/reserva';\r\nimport { MesasService } from 'src/app/servicios/mesas.service';\r\nimport { Mesa } from 'src/app/interfaces/mesa';\r\n\r\n@Component({\r\n  selector: 'app-home-metre',\r\n  templateUrl: './home-metre.page.html',\r\n  styleUrls: ['./home-metre.page.scss'],\r\n})\r\nexport class HomeMetrePage implements OnInit {\r\n\r\n  fecha=new Date();\r\n  mesas:Mesa[];\r\n\r\n  clientesEnEspera = [];\r\n  clientes;\r\n  cantClientesEnEspera = 100;\r\n  constructor(private mesaService: MesasService, private reservasService: ReservasService, private authService: AuthService, private route:Router,\r\n     private alertService: AlertService, private reservaService:ReservasService, private fcmService: FcmService, public datePipe: DatePipe,) {\r\n       this.fcmService.SuscribirANotificacion('notificacionListaEspera')\r\n    this.clientesEnEspera = [];\r\n\r\n    this.mesaService.getMesas().subscribe(mesas => { this.mesas = mesas; \r\n      this.chequearReservas();\r\n\r\n    });\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    //Obtengo los clientes en estado lista de espera y asigno la cantidad total en la variable \"cantClientesEnEspera\" para poder darme cuenta cuando hay un cliente nuevo\r\n    this.authService.getUsuariosListaEspera().subscribe(usuarios=>{\r\n      this.clientesEnEspera = [];\r\n      console.log(usuarios);\r\n      usuarios.forEach(cliente => {\r\n        if( cliente.estado === \"EnListaDeEspera\" ) {\r\n          this.clientesEnEspera.push(cliente);\r\n      }\r\n    });\r\n    if ( this.clientesEnEspera.length > this.cantClientesEnEspera ) {\r\n      //TODO -> PUSH NOTIFICATION\r\n     this.alertService.mensaje(\"\", \"Nuevo Cliente\");\r\n    }\r\n    this.cantClientesEnEspera = this.clientesEnEspera.length;\r\n     console.log(this.clientesEnEspera);\r\n    })\r\n  }\r\n\r\n  Eliminar(id){\r\n    this.reservasService.EliminarListaEspera(id);\r\n  }\r\n  \r\n  aceptarCliente(cliente){\r\n    cliente.estado = \"aceptado\";\r\n    this.authService.ModificarUsuario(cliente);\r\n  }\r\n\r\n  AltaCliente(){\r\n    this.route.navigate(['alta-cliente'])\r\n  }\r\n\r\n  salir(){\r\n    this.authService.LogOut();\r\n    this.route.navigate(['log-in']);\r\n  }\r\n\r\n  chequearReservas(){\r\n      \r\n    let fech1=this.datePipe.transform(this.fecha, 'dd/MM/yyyy');\r\n    let fech2=this.datePipe.transform(this.fecha, 'yyyy-MM-dd');\r\n    this.fecha.setMinutes(this.fecha.getMinutes()-40);\r\n    let resD:Reserva[]=new Array();      \r\n    \r\n    this.reservaService.getReservas().subscribe(list=>{\r\n      list.filter(res=>{\r\n        if(res.fecha==fech1 && res.estado==\"confirmada\"){\r\n          resD.push(res);\r\n        }else if(Number(Date.parse( res.fecha2))<Number(Date.parse( fech2)) && res.estado!=\"expirada\"){\r\n          res.estado=\"expirada\";\r\n          this.reservaService.updateReserva(res);\r\n        }\r\n      })\r\n\r\n      resD.forEach(resDia=>{\r\n        let hor=new Date(resDia.fecha+\" \"+resDia.hora);          \r\n        if(hor>this.fecha){\r\n          this.mesas.filter(mesa=>{\r\n            if(mesa.numero==resDia.mesa.numero && mesa.estado==\"Vacia\" && resDia.situacion==\"a reservar\"){\r\n              mesa.estado=\"Reservada\";              \r\n              this.mesaService.actualizarMesa(mesa);\r\n              resDia.situacion=\"hecha\";\r\n              resDia.mesa=mesa;\r\n              this.reservaService.updateReserva(resDia);\r\n              this.fcmService.enviarMensaje(\"Mesa\"+mesa.numero, \"Le informamos que se encuentra reservada la mesa \"+mesa.numero, 'notificacionListaEspera');\r\n            }else if(mesa.numero==resDia.mesa.numero && mesa.estado==\"Ocupada\" && resDia.situacion==\"a reservar\"){\r\n              this.fcmService.enviarMensaje(\"Mesa\"+mesa.numero, \"Le informamos que se encuentra reservada la mesa \"+mesa.numero+\", debe desocuparla en un plazo menor a 40 minutos.\", 'notificacionListaEspera');\r\n\r\n            }\r\n          })\r\n        }\r\n      })\r\n    })\r\n    \r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}
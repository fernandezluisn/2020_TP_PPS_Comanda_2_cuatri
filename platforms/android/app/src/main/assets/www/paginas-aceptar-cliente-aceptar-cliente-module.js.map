{"version":3,"sources":["webpack:///./src/app/paginas/aceptar-cliente/aceptar-cliente.module.ts","webpack:///./src/app/paginas/aceptar-cliente/aceptar-cliente.page.html","webpack:///./src/app/paginas/aceptar-cliente/aceptar-cliente.page.scss","webpack:///./src/app/paginas/aceptar-cliente/aceptar-cliente.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEe;AAE5D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAkB;KAC9B;CACF,CAAC;AAWF;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QATpC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,wEAAkB,CAAC;SACnC,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBrC,utC;;;;;;;;;;;ACAA,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;ACAb;AACqC;AAE1D;AACgC;AACE;AAO/D;IAEE,4BAAqB,YAAwB,EAAS,aAA4B,EAAU,KAAkB;QAAzF,iBAAY,GAAZ,YAAY,CAAY;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAU,UAAK,GAAL,KAAK,CAAa;QAD9G,aAAQ,GAAO,EAAE,CAAC;IAC+F,CAAC;IAElH,qCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,kBAAQ;YAChD,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC5B,kDAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAK,KAAI,CAAC,aAAa,EAAE,CAAC,EAAC,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACvB,CAAC,CAAC;IAEJ,CAAC;IAED,0CAAa,GAAb;QAAA,iBASC;QARC,IAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,EAAC;YAC1C,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,kBAAQ;gBAChD,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,kDAAK,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAK,KAAI,CAAC,aAAa,EAAE,CAAC,EAAC,CAAC;YACrD,CAAC,CAAC;SACH;IAEH,CAAC;IAED,2CAAc,GAAd,UAAe,OAAO;QACpB,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,EAAE;IAEjB,CAAC;IAED,8CAAiB,GAAjB,UAAkB,OAAe;QAC/B,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAC,SAAkB;YACvD,IAAI,SAAS,EAAE;gBACb,yBAAyB;aAE1B;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,EAAC,EAAE,CAAC;QACzC,IAAI,KAAK,GAAwB;YAC/B,EAAE,EAAE,OAAO,CAAC,IAAI;YAChB,EAAE,EAAE,EAAE;YACN,GAAG,EAAE,EAAE;YACP,WAAW,EAAE,EACZ;YACD,OAAO,EAAE,qCAAqC;YAC9C,IAAI,EAAE,uEAAuE;YAC7E,MAAM,EAAE,IAAI;SACb;QAED,4CAA4C;QAC5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,aAAG,IAAM,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAM,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEvG,CAAC;IAED,iDAAoB,GAApB,UAAqB,OAAe;QAClC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAC,SAAkB;YACvD,IAAI,SAAS,EAAE;gBACb,yBAAyB;aAE1B;QACH,CAAC,CAAC,CAAC;QACH,IAAI,KAAK,GAAwB;YAC/B,EAAE,EAAE,OAAO,CAAC,IAAI;YAChB,EAAE,EAAE,EAAE;YACN,GAAG,EAAE,EAAE;YACP,WAAW,EAAE,EACZ;YACD,OAAO,EAAE,wCAAwC;YACjD,IAAI,EAAE,6DAA6D;YACnE,MAAM,EAAE,IAAI;SACb;QAED,4CAA4C;QAC5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,aAAG,IAAM,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG,IAAM,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEvG,CAAC;IAED,0CAAa,GAAb,UAAc,OAAO;QACnB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,EAAC,EAAE,CAAC;QACxC,IAAI,CAAC,QAAQ,EAAE;QACf,gDAAgD;IAClD,CAAC;IApFU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,+HAA0C;;SAE3C,CAAC;+EAGkC,0EAAW,EAAwB,8EAAa,EAAgB,4EAAY;OAFnG,kBAAkB,CAsF9B;IAAD,yBAAC;CAAA;AAtF8B","file":"paginas-aceptar-cliente-aceptar-cliente-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AceptarClientePage } from './aceptar-cliente.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AceptarClientePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AceptarClientePage]\n})\nexport class AceptarClientePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color='dark'>\\n    <ion-title text-center>Clientes a Aceptar</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n\\n  <ion-slides style=\\\"height: 100%\\\" scrollbar='true' pager=\\\"true\\\" [options]=\\\"slideOpts\\\">\\n    <ion-slide style=\\\"height: 100%\\\" *ngFor=\\\"let cliente of this.clientes\\\">\\n      <ion-content>\\n        <ion-item>\\n          <ion-label>Nombre:</ion-label>\\n          <ion-input class='input_blanco' type=\\\"text\\\" [(ngModel)]=\\\"cliente.nombre\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>DNI:</ion-label>\\n          <ion-input class='input_blanco' type=\\\"text\\\" [(ngModel)]=\\\"cliente.dni\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-img [src]=\\\"cliente.foto\\\"></ion-img>\\n        </ion-item>\\n\\n\\n        <ion-footer>\\n          <ion-toolbar>\\n            <ion-button color='danger' class=\\\"mitad\\\" (click)='this.BorrarCliente(cliente)'>Cancelar</ion-button>\\n            <ion-button color='success' class=\\\"mitad\\\" (click)='this.AceptarCliente(cliente)'>Aceptar Cliente</ion-button>\\n          </ion-toolbar>\\n        </ion-footer>\\n      </ion-content>\\n    </ion-slide>\\n  </ion-slides>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYXMvYWNlcHRhci1jbGllbnRlL2FjZXB0YXItY2xpZW50ZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { EmailComposerOptions, EmailComposer } from '@ionic-native/email-composer/ngx';\nimport { Cliente } from 'src/app/interfaces/usuario';\nimport { timer } from 'rxjs';\nimport { AuthService } from 'src/app/servicios/auth.service';\nimport { AlertService } from 'src/app/servicios/alert.service';\n\n@Component({\n  selector: 'app-aceptar-cliente',\n  templateUrl: './aceptar-cliente.page.html',\n  styleUrls: ['./aceptar-cliente.page.scss'],\n})\nexport class AceptarClientePage implements OnInit {\n  clientes: any= [];\n  constructor( private clienteServe:AuthService,private emailComposer: EmailComposer, private alert:AlertService) {}\n\n  ngOnInit() {\n    this.clienteServe.GetUsuariosAceptar().then(clientes=>{\n        this.clientes = clientes;\n     timer(3000).subscribe(()=>{this.TomarUsuarios();})\n      console.log(clientes)\n    })\n\n  }\n\n  TomarUsuarios() {\n    if(this.clienteServe.getUsuario()['perfil']){\n      this.clienteServe.GetUsuariosAceptar().then(clientes=>{\n          this.clientes = clientes;\n        console.log(clientes)\n        timer(10000).subscribe(()=>{this.TomarUsuarios();})\n      })\n    }\n\n  }\n\n  AceptarCliente(cliente){\n    cliente.activo = true;\n    this.clienteServe.ModificarUsuario(cliente);\n    this.SendAcceptedEmail(cliente);\n    this.ngOnInit()\n\n  }\n\n  SendAcceptedEmail(cliente:Cliente) {\n    this.emailComposer.isAvailable().then((available: boolean) => {\n      if (available) {\n        //Now we know we can send\n\n      }\n    });\n    this.alert.mensaje(\"Cliente Aceptado\",\"\")\n    let email:EmailComposerOptions = {\n      to: cliente.mail,\n      cc: '',\n      bcc: [],\n      attachments: [\n      ],\n      subject: 'Comanda: Tu cuenta ha sido aceptada',\n      body: 'Por favor accede a nuestra aplicacion para poder ingresar a tu cuenta',\n      isHtml: true\n    }\n\n    // Send a text message using default options\n    this.emailComposer.open(email).then(ret => { console.log(ret) }).catch(err => { console.log(err); });\n\n  }\n\n  SendNotAcceptedEmail(cliente:Cliente) {\n    this.emailComposer.isAvailable().then((available: boolean) => {\n      if (available) {\n        //Now we know we can send\n\n      }\n    });\n    let email:EmailComposerOptions = {\n      to: cliente.mail,\n      cc: '',\n      bcc: [],\n      attachments: [\n      ],\n      subject: 'Comanda: Tu cuenta no ha sido aceptada',\n      body: 'Usted no ha sido aceptado para ser cliente del restaurante.',\n      isHtml: true\n    }\n\n    // Send a text message using default options\n    this.emailComposer.open(email).then(ret => { console.log(ret) }).catch(err => { console.log(err); });\n\n  }\n\n  BorrarCliente(cliente){\n    this.clienteServe.BorrarUsuario(cliente)\n    this.alert.mensaje(\"Cliente Borrado\",\"\")\n    this.ngOnInit()\n    // console.log(this.clientes.findIndex(cliente))\n  }\n\n}\n"],"sourceRoot":""}
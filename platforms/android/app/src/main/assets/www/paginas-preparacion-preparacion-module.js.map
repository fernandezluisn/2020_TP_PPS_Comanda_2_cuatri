{"version":3,"sources":["webpack:///./src/app/paginas/preparacion/preparacion.module.ts","webpack:///./src/app/paginas/preparacion/preparacion.page.html","webpack:///./src/app/paginas/preparacion/preparacion.page.scss","webpack:///./src/app/paginas/preparacion/preparacion.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEQ;AAErD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iEAAe;KAC3B;CACF,CAAC;AAWF;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QATjC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,iEAAe,CAAC;SAChC,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBlC,olBAAolB,4BAA4B,cAAc,sBAAsB,+UAA+U,4BAA4B,cAAc,sBAAsB,qd;;;;;;;;;;;ACAniC,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;;;ACAb;AACW;AACF;AACQ;AACJ;AACI;AAOnE;IAIE,yBAAoB,cAA2B,EAAU,UAAsB,EAAU,cAA8B,EAC7G,YAA0B,EAAU,cAA8B;QADxD,mBAAc,GAAd,cAAc,CAAa;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAC7G,iBAAY,GAAZ,YAAY,CAAc;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAF5E,qBAAgB,GAAG,EAAE,CAAC;QAGpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IAE7D,CAAC;IAED,kCAAQ,GAAR;QAAA,iBAkBK;QAjBH,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,IAAQ;YAClE,IAAI,CAAC,OAAO,CAAC,cAAI;gBACf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACzB,IAAI,EAAE,GAAG,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC;gBACvB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,KAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE;YACxB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QAEzB,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,UAAO,OAAO;;gBAC7D,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACvB,IAAI,CAAC,gBAAgB,GAAG,OAAO;;;aAChC,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAErC,CAAC;IAED,0CAAgB,GAAhB,UAAiB,MAAM;QAErB,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,gBAAgB,EAAE,sBAAsB,EAAE,kBAAkB,CAAC,CAAC;IAE9F,CAAC;IApCM,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,mHAAsC;;SAEvC,CAAC;+EAKoC,0EAAW,EAAsB,wEAAU,EAA0B,gFAAc;YAC/F,4EAAY,EAA0B,gFAAc;OALjE,eAAe,CAsC3B;IAAD,sBAAC;CAAA;AAtC2B","file":"paginas-preparacion-preparacion-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PreparacionPage } from './preparacion.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PreparacionPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PreparacionPage]\r\n})\r\nexport class PreparacionPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Productos a preparar</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding color=\\\"dark\\\"> \\r\\n\\r\\n  <br>\\r\\n  <ion-list-header lines=\\\"inset\\\" color=\\\"dark\\\">\\r\\n    <ion-label>Productos</ion-label>\\r\\n  </ion-list-header>\\r\\n<div *ngFor=\\\"let pedidosProd of this.pedidosProdlista\\\">\\r\\n\\r\\n  <ion-item color=\\\"dark\\\" *ngIf=\\\"pedidosProd.tipoProducto == 'bebida' && this.usuario.perfil == 'bar' && pedidosProd.estado =='confirmado'\\\">\\r\\n    <ion-label style=\\\"color:black\\\" >Comida: {{pedidosProd.nombreProducto}}  Cantidad: {{pedidosProd.cantidad}}</ion-label>\\r\\n    <ion-button fill=\\\"outline\\\" (click)=\\\"prepararProducto(pedidosProd)\\\">Preparar</ion-button>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-item color=\\\"dark\\\" *ngIf=\\\"pedidosProd.tipoProducto == 'comida' && this.usuario.perfil == 'cocina' && pedidosProd.estado =='confirmado'\\\">\\r\\n    <ion-label style=\\\"color:black\\\" >Bebida: {{pedidosProd.nombreProducto}}  Cantidad: {{pedidosProd.cantidad}}</ion-label>\\r\\n    <ion-button fill=\\\"outline\\\" (click)=\\\"prepararProducto(pedidosProd)\\\">Preparar</ion-button>\\r\\n  </ion-item>\\r\\n</div>\\r\\n<div *ngIf=\\\"pedidosProdlista.length === 0\\\">\\r\\n  <ion-item color=\\\"dark\\\">\\r\\n    <ion-label >Sin productos a preparar.</ion-label>\\r\\n  </ion-item>\\r\\n</div>\\r\\n\\r\\n<ion-button class=\\\"apagar\\\" color=\\\"dark\\\" (click)=\\\"salir()\\\">\\r\\n  <ion-icon name=\\\"power\\\"></ion-icon>\\r\\n</ion-button>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYXMvcHJlcGFyYWNpb24vcHJlcGFyYWNpb24ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/servicios/auth.service';\r\nimport { FcmService } from 'src/app/servicios/fcm.service';\r\nimport { SpinnerService } from 'src/app/servicios/spinner.service';\r\nimport { AlertService } from 'src/app/servicios/alert.service';\r\nimport { PedidosService } from 'src/app/servicios/pedidos.service';\r\n\r\n@Component({\r\n  selector: 'app-preparacion',\r\n  templateUrl: './preparacion.page.html',\r\n  styleUrls: ['./preparacion.page.scss'],\r\n})\r\nexport class PreparacionPage implements OnInit {\r\n\r\n  usuario;\r\n  pedidosProdlista = [];\r\n  constructor(private clienteService: AuthService, private fcmService: FcmService, private spinnerService: SpinnerService,\r\n    private alertService: AlertService, private pedidosService: PedidosService) { \r\n    this.usuario = JSON.parse(localStorage.getItem('usuario')); \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.clienteService.obtenerCliente(this.usuario.uid).subscribe((resp:any) =>{\r\n          resp.forEach(user => {\r\n            console.log(user.estado);\r\n            var id = this.usuario.id;\r\n              this.usuario = user;      \r\n              this.usuario.id = id         \r\n          });  \r\n        })\r\n\r\n        console.log(this.usuario)\r\n\r\n        this.pedidosService.getPedidoProductos().subscribe(async (pedidos) => {\r\n            console.log(pedidos);\r\n          this.pedidosProdlista = pedidos\r\n        })  \r\n        console.log(this.pedidosProdlista);\r\n      \r\n      }\r\n\r\n      prepararProducto(pedido){\r\n\r\n        pedido.estado = \"listo\";\r\n        this.pedidosService.updatePedidoProducto(pedido.id, pedido);\r\n        this.fcmService.enviarMensaje(\"Producto Listo\", \"nuevo producto listo\", \"notificacionMozo\");\r\n\r\n      }\r\n\r\n}\r\n"],"sourceRoot":""}
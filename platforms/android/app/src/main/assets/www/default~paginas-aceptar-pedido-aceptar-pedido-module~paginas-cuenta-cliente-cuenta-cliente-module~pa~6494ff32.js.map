{"version":3,"sources":["webpack:///./src/app/servicios/pedidos.service.ts","webpack:///./src/app/servicios/productos.service.ts","webpack:///./src/app/servicios/spinner.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAA2C;AACgB;AACT;AAEK;AAMvD;IAEE,wBACU,SAA2B,EAC3B,gBAAkC;QADlC,cAAS,GAAT,SAAS,CAAkB;QAC3B,qBAAgB,GAAhB,gBAAgB,CAAkB;IACxC,CAAC;IAEL,kCAAS,GAAT,UAAU,MAAM;QAAhB,iBAQC;QAPC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,QAAQ;YACnC,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,aAAG;gBACvD,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;gBACV,QAAQ,CAAC,GAAG,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACD,0CAAiB,GAAjB,UAAkB,cAAc;QAAhC,iBAQC;QAPC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,QAAQ;YACnC,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,aAAG;gBACxE,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;gBACV,QAAQ,CAAC,GAAG,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACD,mCAAU,GAAV;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,uEAAG,CAAC,UAAC,OAAO;YAC7E,OAAO,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM;gBACxB,IAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAY,CAAC;gBACjD,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBAChC,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,kCAAS,GAAT,UAAU,MAAc;QAAxB,iBAUC;QATC,yFAAyF;QACzF,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,EAAE,MAAM,CAAC,0CAAyC,CAAC,GAAG,EAAE;aAC5H,IAAI,CAAC,UAAM,OAAO;;;4BACT,qBAAM,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAS;4BACtC,IAAM,IAAI,GAAG,SAAS,CAAC,IAAI,EAAY,CAAC;4BACxC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;4BACvB,OAAO,IAAI,CAAC;wBACd,CAAC,CAAC;4BAJD,sBAAO,SAIN,EAAC;;;aACJ,CAAC,CAAC;IACL,CAAC;IAED,iDAAwB,GAAxB,UAAyB,KAAa;QAAtC,iBASC;QARC,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,GAAG,EAAE;aAChF,IAAI,CAAC,UAAM,OAAO;;;4BACT,qBAAM,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAS;4BACtC,IAAM,IAAI,GAAG,SAAS,CAAC,IAAI,EAAY,CAAC;4BACxC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;4BACvB,OAAO,IAAI,CAAC;wBACd,CAAC,CAAC;4BAJD,sBAAO,SAIN,EAAC;;;aACJ,CAAC,CAAC;IACL,CAAC;IAGD,2CAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,uEAAG,CAAC,UAAC,OAAO;YACtF,OAAO,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM;gBACxB,IAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAoB,CAAC;gBACzD,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBAChC,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAGD,qDAA4B,GAA5B,UAA6B,QAAgB;QAA7C,iBAUC;QATC,yFAAyF;QACzF,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE;aAChG,IAAI,CAAC,UAAM,OAAO;;;4BACT,qBAAM,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAS;4BACtC,IAAM,IAAI,GAAG,SAAS,CAAC,IAAI,EAAoB,CAAC;4BAChD,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;4BACvB,OAAO,IAAI,CAAC;wBACd,CAAC,CAAC;4BAJD,sBAAO,SAIN,EAAC;;;aACJ,CAAC,CAAC;IACL,CAAC;IAGM,4CAAmB,GAA1B;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,uEAAG,CAAC,UAAC,KAAK;YACpF,OAAO,KAAK,CAAC,GAAG,CAAC,UAAC,CAAC;gBACjB,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC9B,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,qCAAY,GAAZ,UAAa,EAAE,EAAE,MAAM;QACrB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC3D,CAAC;IAED,6CAAoB,GAApB,UAAqB,EAAE,EAAE,MAAM;QAC7B,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACpE,CAAC;IAEM,qCAAY,GAAnB;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,uEAAG,CAAC,UAAC,KAAK;YAC7E,OAAO,KAAK,CAAC,GAAG,CAAC,UAAC,CAAC;gBACjB,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC9B,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IACM,oCAAW,GAAlB,UAAmB,MAAc;QAAjC,iBAaC;QAZC,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAO,SAAS;;gBACtG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;oBACpD,QAAQ,EAAE,MAAM,CAAC,QAAQ;oBACzB,eAAe,EAAE,MAAM,CAAC,eAAe;oBACvC,OAAO,EAAE,MAAM,CAAC,OAAO;oBAEvB,MAAM,EAAE,QAAQ;iBACnB,CAAC;qBACD,KAAK,CAAC,aAAG;oBACR,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;;;aACJ,CAAC,CAAC;IACL,CAAC;IACM,qCAAY,GAAnB,UAAoB,QAAgB;QAClC,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;IACrE,CAAC;IA9HU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAIqB,wEAAgB;YACT,mEAAgB;OAJjC,cAAc,CA+H1B;IAAD,qBAAC;CAAA;AA/H0B;;;;;;;;;;;;;;;;;;;;ACVgB;AACmC;AAEzC;AAMrC;IAIE,0BAAoB,EAAmB;QAAnB,OAAE,GAAF,EAAE,CAAiB;QACrC,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAC,IAAI,CACnE,0DAAG,CAAC,iBAAO;YACT,OAAO,OAAO,CAAC,GAAG,CAChB,WAAC;gBACC,IAAM,IAAI,GAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBACjC,IAAM,EAAE,GAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC1B,OAAO,iDAAC,EAAE,QAAM,IAAY,EAAC;YAC/B,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,yCAAc,GAAd,UAAe,QAAiB;QAC9B,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,mDAAI,QAAQ,EAAE,CAAC;IAC5D,CAAC;IAED,mDAAwB,GAAxB;QACE,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,6CAAkB,GAAlB,UAAmB,IAAa;QAE9B,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,GAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,mDAAI,IAAI,EAAE,CAAC;IAE3D,CAAC;IAED,yCAAc,GAAd,UAAe,IAAc;QAC3B,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;IACrD,CAAC;IAlCU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAKuB,wEAAgB;OAJ5B,gBAAgB,CAmC5B;IAAD,uBAAC;CAAA;AAnC4B;;;;;;;;;;;;;;;;;;;ACTc;AACyB;AAMpE;IAQE,wBACU,kBAAqC,EACrC,UAA2B;QAD3B,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,eAAU,GAAV,UAAU,CAAiB;QAP7B,sBAAiB,GAAG,KAAK,CAAC;QAC1B,oBAAe,GAAG,KAAK,CAAC;QACxB,WAAM,GAAG,CAAC,CAAC,CAAC,CAAC,gDAAgD;QAC7D,aAAQ,GAAG,IAAI,CAAC;QAMtB,wCAAwC;QACxC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEa,sCAAa,GAA3B;;;;;;wBACE,SAAI;wBAAmB,qBAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;gCACxD,OAAO,EAAE,IAAI;gCACb,aAAa,EAAE,IAAI;gCACnB,OAAO,EAAE,2EAA2E;gCACpF,YAAY,EAAE,KAAK;gCACnB,QAAQ,EAAC,KAAK;gCACd,QAAQ,EAAE,aAAa;6BACxB,CAAC;;wBAPJ,GAAK,eAAe,GAAG,SAOnB,CAAC;;;;;KACN;IAEY,oCAAW,GAAxB;;;gBACE,2DAA2D;gBAC3D,IAAI,IAAI,CAAC,iBAAiB,KAAK,KAAK,EAAE;oBACpC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;oBAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;iBAC5C;;;;KACF;IAEO,mCAAU,GAAlB;QAAA,iBAeC;QAdC,uCAAuC;QACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;YAC1B,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAE9B,IAAI,KAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,uCAAuC;gBACvC,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC5B,aAAa,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B;QACH,CAAC,EAAE,CAAC,CAAC,CAAC;QAEN,OAAO,IAAI,CAAC;IACd,CAAC;IAEY,oCAAW,GAAxB;;;;gBACE,0EAA0E;gBAE1E,IAAI,IAAI,CAAC,iBAAiB,EAAE;oBAC1B,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;wBACnB,uDAAuD;wBACvD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;wBACtD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;qBAC9B;yBAAM;wBACL,qFAAqF;wBACrF,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBAC7B,UAAU,CAAC;4BACT,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;4BAC5B,KAAI,CAAC,WAAW,EAAE,CAAC;wBACrB,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;qBACjB;oBAED,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;iBAClB;;;;KACF;IAEO,8CAAqB,GAA7B;QACE,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QAC/B,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,qCAAY,GAAnB,UAAoB,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ;QACjD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;YACrB,KAAK;YACL,QAAQ,EAAE,KAAK,GAAG,IAAI;YACtB,OAAO;YACP,QAAQ;SACT,CAAC;aACC,IAAI,CAAC,UAAC,KAA0B;YAC/B,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAzFU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAU8B,gEAAiB;YACzB,8DAAe;OAV1B,cAAc,CA0F1B;IAAD,qBAAC;CAAA;AA1F0B","file":"default~paginas-aceptar-pedido-aceptar-pedido-module~paginas-cuenta-cliente-cuenta-cliente-module~pa~6494ff32.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { Pedido, PedidoProducto } from '../interfaces/pedido';\r\nimport { ProductosService } from './productos.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PedidosService {\r\n\r\n  constructor(\r\n    private firestore: AngularFirestore,\r\n    private productosService: ProductosService\r\n  ) { }\r\n\r\n  AddPedido(pedido) {\r\n    return new Promise((resolve, rejected) => {\r\n      this.firestore.collection('pedidos').add(pedido).then(ret => {\r\n        resolve(ret);\r\n      }).catch(err => {\r\n        rejected(err);\r\n      });\r\n    });\r\n  }\r\n  AddPedidoProducto(pedidoProducto) {\r\n    return new Promise((resolve, rejected) => {\r\n      this.firestore.collection('pedido-productos').add(pedidoProducto).then(ret => {\r\n        resolve(ret);\r\n      }).catch(err => {\r\n        rejected(err);\r\n      });\r\n    });\r\n  }\r\n  getPedidos() {\r\n    return this.firestore.collection('pedidos').snapshotChanges().pipe(map((pedidos) => {\r\n      return pedidos.map((pedido) => {\r\n        const data = pedido.payload.doc.data() as Pedido;\r\n        data.id = pedido.payload.doc.id;\r\n        return data;\r\n      });\r\n    }));\r\n  }\r\n\r\n  getPedido(idMesa: string) {\r\n    // ACÁ ESTÁ EL ERROR, TRAE ÚNICAMENTE LOS REGISTROS QUE ESTÁN CON EL ESTADO \"PREPARACIÓN\"\r\n    return this.firestore.collection('pedidos').ref.where('id-mesa', '==', idMesa)/*.where('estado', '==', 'preparacion')*/.get()\r\n    .then(async pedidos => {\r\n       return await pedidos.docs.map(documento => {\r\n        const data = documento.data() as Pedido;\r\n        data.id = documento.id;\r\n        return data;\r\n      });\r\n    });\r\n  }\r\n\r\n  getPedidoPorEmailCliente(email: string) {\r\n    return this.firestore.collection('pedidos').ref.where('email', '==', email).get()\r\n    .then(async pedidos => {\r\n       return await pedidos.docs.map(documento => {\r\n        const data = documento.data() as Pedido;\r\n        data.id = documento.id;\r\n        return data;\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  getPedidoProductos() {\r\n    return this.firestore.collection('pedido-productos').snapshotChanges().pipe(map((pedidos) => {\r\n      return pedidos.map((pedido) => {\r\n        const data = pedido.payload.doc.data() as PedidoProducto;\r\n        data.id = pedido.payload.doc.id;\r\n        return data;\r\n      });\r\n    }));\r\n  }\r\n\r\n  \r\n  getPedidosProductosPorPedido(idPedido: string) {\r\n    // ACÁ ESTÁ EL ERROR, TRAE ÚNICAMENTE LOS REGISTROS QUE ESTÁN CON EL ESTADO \"PREPARACIÓN\"\r\n    return this.firestore.collection('pedido-productos').ref.where('id_pedido', '==', idPedido).get()\r\n    .then(async pedidos => {\r\n       return await pedidos.docs.map(documento => {\r\n        const data = documento.data() as PedidoProducto;\r\n        data.id = documento.id;\r\n        return data;\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  public getPedidosProductos() {\r\n    return this.firestore.collection('pedido-productos').snapshotChanges().pipe(map((fotos) => {\r\n      return fotos.map((a) => {\r\n        const data = a.payload.doc.data();\r\n        data['id'] = a.payload.doc.id;\r\n        return data;\r\n      });\r\n    }));\r\n  }\r\n\r\n  updatePedido(id, pedido){\r\n    this.firestore.collection('pedidos').doc(id).set(pedido);\r\n  }\r\n\r\n  updatePedidoProducto(id, pedido){\r\n    this.firestore.collection('pedido-productos').doc(id).set(pedido);\r\n  }\r\n\r\n  public getProductos() {\r\n    return this.firestore.collection('productos').snapshotChanges().pipe(map((fotos) => {\r\n      return fotos.map((a) => {\r\n        const data = a.payload.doc.data();\r\n        data['id'] = a.payload.doc.id;\r\n        return data;\r\n      });\r\n    }));\r\n  }\r\n  public PagarPedido(pedido: Pedido) {\r\n    return this.firestore.collection('pedidos').ref.where('id', '==', pedido.id).get().then(async (documento) => {\r\n      this.firestore.collection('pedidos').doc(pedido.id).set({\r\n          comienzo: pedido.comienzo,\r\n          id_mesa_cliente: pedido.id_mesa_cliente,\r\n          id_mozo: pedido.id_mozo,\r\n\r\n          estado: 'pagado'\r\n      })\r\n      .catch(err => {\r\n        console.log('Error al pagar', err);\r\n      });\r\n    });\r\n  }\r\n  public DeletePedido(idPedido: string) {\r\n    return this.firestore.collection('pedidos').doc(idPedido).delete();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore, DocumentReference } from '@angular/fire/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Producto } from '../interfaces/producto';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductosService {\r\n\r\n  productos:Observable<Producto[]>;\r\n\r\n  constructor(private db:AngularFirestore) { \r\n    this.productos=this.db.collection(\"productos\").snapshotChanges().pipe(\r\n      map(actions=>{\r\n        return actions.map(\r\n          a=>{\r\n            const data= a.payload.doc.data();\r\n            const id=a.payload.doc.id;\r\n            return {id, ...(data as any)}\r\n          }\r\n        );\r\n      })   \r\n    );\r\n  }\r\n\r\n  createProducto(producto:Producto): Promise<DocumentReference> {\r\n    return this.db.collection('productos').add({...producto});\r\n  }  \r\n\r\n  devolverListadoProductos(){\r\n    return this.productos;\r\n  }\r\n\r\n  actualizarProducto(prod:Producto) {     \r\n    \r\n    this.db.doc('productos' + '/'+prod.id).update({...prod});    \r\n    \r\n  }\r\n\r\n  BorrarProducto(prod: Producto) {\r\n    this.db.doc('productos/' + prod.id).delete().then()\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoadingController, ToastController } from '@ionic/angular';\r\nimport { LoadingOptions } from '@ionic/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpinnerService {\r\n  // tslint:disable: variable-name\r\n  private _currentLoading: HTMLIonLoadingElement; // This is the spinner\r\n  private _isSpinnerShowing = false;\r\n  private _isGoingToClose = false;\r\n  private _timer = -1; // This is the timer, it will go from 2000 to -1\r\n  private _timerID = null;\r\n\r\n  constructor(\r\n    private _loadingController: LoadingController,\r\n    private _toastCtrl: ToastController\r\n  ) {\r\n    // console.log('Inicializo el spinner');\r\n    this.createSpinner();\r\n  }\r\n\r\n  private async createSpinner() {\r\n    this._currentLoading = await this._loadingController.create({\r\n        spinner: null,\r\n        keyboardClose: true,\r\n        message: '<div class=\"spinner-css\"><img src=\"assets/loading.png\"></div> Cargando...',\r\n        showBackdrop: false,\r\n        duration:30000,\r\n        cssClass: 'cajaSpinner'\r\n      });\r\n  }\r\n\r\n  public async showSpinner() {\r\n    // console.log('Muestro el spinner', this._currentLoading);\r\n    if (this._isSpinnerShowing === false) {\r\n      this._currentLoading.present();\r\n      this._isSpinnerShowing = this.startTimer();\r\n    }\r\n  }\r\n\r\n  private startTimer() {\r\n    // console.log('Inicializo el conteo');\r\n    this._timer = 2000;\r\n\r\n    this._timerID = setInterval(() => {\r\n      this._timer = this._timer - 1;\r\n\r\n      if (this._timer < 0) {\r\n        // console.log('El conteo se acabÃ³.');\r\n        this._isGoingToClose = true;\r\n        clearInterval(this._timerID);\r\n      }\r\n    }, 1);\r\n\r\n    return true;\r\n  }\r\n\r\n  public async hideSpinner() {\r\n    // console.log('Intento ocultar el spinner con el timer en', this._timer);\r\n\r\n    if (this._isSpinnerShowing) {\r\n      if (this._timer < 0) {\r\n        // console.log('El tiempo acabÃ³ y oculto el spinner');\r\n        this._isSpinnerShowing = this.stopAndReplaceSpinner();\r\n        this._isGoingToClose = false;\r\n      } else {\r\n        // console.log('El tiempo NO acaba y hago un timeout para acabarlo en', this._timer);\r\n        clearInterval(this._timerID);\r\n        setTimeout(() => {\r\n          this._isGoingToClose = true;\r\n          this.hideSpinner();\r\n        }, this._timer);\r\n      }\r\n\r\n      this._timer = -1;\r\n    }\r\n  }\r\n\r\n  private stopAndReplaceSpinner() {\r\n    this._currentLoading.dismiss();\r\n    this.createSpinner();\r\n    return false;\r\n  }\r\n\r\n  public mostrarToast(message, timer, color, position) {\r\n    this._toastCtrl.create({\r\n      color,\r\n      duration: timer * 1000,\r\n      message,\r\n      position,\r\n    })\r\n      .then((toast: HTMLIonToastElement) => {\r\n        toast.present();\r\n      });\r\n  }\r\n}\r\n"],"sourceRoot":""}
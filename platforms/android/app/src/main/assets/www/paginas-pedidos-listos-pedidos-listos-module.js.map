{"version":3,"sources":["webpack:///./src/app/paginas/pedidos-listos/pedidos-listos.module.ts","webpack:///./src/app/paginas/pedidos-listos/pedidos-listos.page.html","webpack:///./src/app/paginas/pedidos-listos/pedidos-listos.page.scss","webpack:///./src/app/paginas/pedidos-listos/pedidos-listos.page.ts"],"names":[],"mappings":"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","file":"paginas-pedidos-listos-pedidos-listos-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PedidosListosPage } from './pedidos-listos.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PedidosListosPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PedidosListosPage]\n})\nexport class PedidosListosPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Pedidos</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding color=\\\"dark\\\"> \\n\\n  <br>\\n  <ion-list-header lines=\\\"inset\\\" color=\\\"dark\\\">\\n    <ion-label>Estado de Pedidos</ion-label>\\n  </ion-list-header>\\n<div *ngFor=\\\"let pedido of this.pedidosMostrar\\\">\\n  <ion-item color=\\\"dark\\\">\\n    <ion-label style=\\\"color:black\\\" >Pedido de {{pedido.usuario}} En  {{pedido.Mesa}} Se encuentra en estado: {{pedido.estado}}</ion-label>\\n    <ion-button fill=\\\"outline\\\" (click)=\\\"servir(pedido)\\\" *ngIf=\\\"pedido.estado=='listo'\\\">Servir</ion-button>\\n  </ion-item>\\n</div>\\n<div *ngIf=\\\"pedidosMostrar.length === 0\\\">\\n  <ion-item color=\\\"dark\\\">\\n    <ion-label >Sin Pedidos pendientes.</ion-label>\\n  </ion-item>\\n</div>\\n\\n<ion-button class=\\\"apagar\\\" color=\\\"dark\\\" (click)=\\\"salir()\\\">\\n  <ion-icon name=\\\"power\\\"></ion-icon>\\n</ion-button>\\n\\n</ion-content>\\n\\n\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-button color='dark' expand=\\\"full\\\" (click)='this.AltaCliente()' >Alta Cliente</ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYXMvcGVkaWRvcy1saXN0b3MvcGVkaWRvcy1saXN0b3MucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FcmService } from 'src/app/servicios/fcm.service';\nimport { Router } from '@angular/router';\nimport { PedidosService } from 'src/app/servicios/pedidos.service';\nimport { SpinnerService } from 'src/app/servicios/spinner.service';\nimport { AlertService } from 'src/app/servicios/alert.service';\nimport { MesasService } from 'src/app/servicios/mesas.service';\n\n@Component({\n  selector: 'app-pedidos-listos',\n  templateUrl: './pedidos-listos.page.html',\n  styleUrls: ['./pedidos-listos.page.scss'],\n})\nexport class PedidosListosPage implements OnInit {\n\n\n  pedidosMostrar = [];\n    mesas;\n    pedidosProducto;\n  constructor(private fcmService: FcmService, private router: Router, private pedidoService: PedidosService, \n    private spinnerService: SpinnerService, private alertService: AlertService, private mesaService: MesasService) { }\n\n\n\n\n  ngOnInit() {\n\n    this.pedidoService.getPedidos().subscribe(pedidos => { \n\n\n         pedidos.forEach(pedido => {\n\n          if(pedido.estado != \"sconfirmar\" && pedido.estado != \"cerrado\" && pedido.estado != \"entregado\")\n          {\n           var conPendientes = 0;\n           pedido.estado = \"listo\";\n            this.pedidoService.getPedidosProductosPorPedido(pedido.id).then(pedidosProducto => {\n              console.log(pedidosProducto);\n             // pedido.productos = pedidosProducto;\n              pedidosProducto.forEach(element => {\n                console.log(element);\n                    if (element.estado != \"listo\")\n                      conPendientes = 1;\n                  });\n                  console.log(\"termine\"+ conPendientes);\n\n                  \n              if(conPendientes != 0)\n              pedido.estado = \"En Preparacion\"\n\n              })\n          \n                this.pedidosMostrar.push(pedido);\n            }\n           })     \n       });  \n  }\n\n\n  servir(pedido){\n    \n  pedido.estado = \"entregado\";\n  this.pedidoService.updatePedido(pedido.id, pedido);\n  this.spinnerService.showSpinner();\n  this.alertService.mensaje(\"\", \"Se ha entregado el pedido!\");\n  this.spinnerService.hideSpinner();\n  this.router.navigate(['/home-mozo']);\n}\n\n}\n"],"sourceRoot":""}